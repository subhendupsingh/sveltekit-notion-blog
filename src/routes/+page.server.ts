import { BYPASS_TOKEN } from '$env/static/private';
import { getDatabaseById } from '$lib/notion/api';
import type { PageServerLoad } from './$types';

export const config = {
    isr: {
        // Expiration time (in seconds) before the cached asset will be re-generated by invoking the Serverless Function.
        // Setting the value to `false` means it will never expire.
        expiration: false,

        // Random token that can be provided in the URL to bypass the cached version of the asset, by requesting the asset
        // with a __prerender_bypass=<token> cookie.
        //
        // Making a `GET` or `HEAD` request with `x-prerender-revalidate: <token>` will force the asset to be re-validated.
        bypassToken: BYPASS_TOKEN,

        // List of valid query parameters. Other parameters (such as utm tracking codes) will be ignored,
        // ensuring that they do not result in content being regenerated unnecessarily
        allowQuery: ['search']
    }
};

export const load = (async () => {
    try {
        const res = await getDatabaseById("4d9d69b33e68432c9b516354816eff09"); 
        if(res.isOk()){
            if(res.value?.length > 0){
                //console.log("res.value", JSON.stringify(res.value));
                return {
                    pages: res.value
                }
            }else{
                return {
                    error: {
                        code: 400,
                        message: "Please add rows in the database"
                    }
                }
            }
        }

        if(res.isErr()){
            return {
                error: {
                    code: res.error.code,
                    message: res.error.message
                }
            }
        }
    } catch (error) {
        return {
            error: {
                code: 500,
                message: "Some error ocurred"
            }
        }
    }
}) satisfies PageServerLoad;